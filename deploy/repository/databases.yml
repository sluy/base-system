version: '2'
services:
  securitydb:
    container_name: securitydb
    extends:
      file: base/databases.yml
      service: mysqlsecutiry
    environment:
      MYSQL_DATABASE: ${DB_DATABASE_SEC}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD_SEC}
      MYSQL_USER: ${DB_USERNAME_SEC}
      MYSQL_PASSWORD: ${DB_PASSWORD_SEC}

  repositorydb:
    container_name: repositorydb
    image: mysql:latest
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD_SEC}
      MYSQL_USER: ${DB_USERNAME_SEC}
      MYSQL_PASSWORD: ${DB_PASSWORD_SEC}

  mongoserver:
    container_name: mongo_server
    image: "mongo_server"
    build: ./mongo_server
    ports:
      - "27017:27017"
    volumes:
      - ../../data-app/mongo/primary/db:/data/db
      - ../../data-logs/mongo/logs:/var/log/mongodb/db
      - ../../data-logs/mongo/backup:/var/log/mongodb/backup
      - ../../mongo-backup:/opt/mongo-backup

  mongo_server_1:
    container_name: mongo_server_1
    image: "mongo:4.4.6"
    command: --replSet rs0 --oplogSize 128
    ports:
      - "27018:27017"
    volumes:
      - ../../data-app/mongo/slave1/db:/data/db

  mongo_server_2:
    container_name: mongo_server_2
    image: "mongo:4.4.6"
    command: --replSet rs0 --oplogSize 128
    ports:
      - "27019:27017"
    volumes:
      - ../../data-app/mongo/slave2/db

  mongo_setup:
    image: "mongo_setup"
    container_name: mongo_setup
    build: ./mongo_setup


  mysqlserver:
    container_name: mysql_server
    extends:
      file: base/databases.yml
      service: mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}

  securitydbv2:
    container_name: securitydbv2
    extends:
      file: base/databases.yml
      service: securityv2
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}

  redisserver:
    container_name: redis_server
    extends:
      file: base/databases.yml
      service: redis
    volumes:
     - ../../data-app/redis:/data

  redis5server:
    container_name: redis5_server
    extends:
      file: base/databases.yml
      service: redis5
    volumes:
      - ../../data-app/redis5:/data

  legacydb:
    container_name: legacydb
    extends:
      file: base/databases.yml
      service: mysql
    volumes:
      - ../../data-app/mysql/legacy:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: Milicom.
      MYSQL_USER: drios
      MYSQL_PASSWORD: abc123


